#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;

    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q                      &kp W                &kp E    &kp R                   &kp T                                                          &kp Y                 &kp U  &lt 5 I    &kp O    &kp P
&mt LG(LS(KP_NUMBER_5)) A  &kp S                &kp D    &kp F                   &kp G                      &none                &none          &kp H                 &kp J  &kp K      &kp L    &lt 5 MINUS
&mt LS(LG(KP_NUMBER_4)) Z  &kp X                &kp C    &kp V                   &kp B                      &lt 6 LG(LA(D))      &lt 6 LG(TAB)  &kp N                 &kp M  &kp COMMA  &kp DOT  &mkp MB2
&kp LEFT_ALT               &mt LEFT_CONTROL F7  &kp TAB  &mt LEFT_GUI BACKSPACE  &mt LEFT_SHIFT LANGUAGE_2  &lt 2 SPACE          &lt 1 ENTER    &mt LEFT_SHIFT LANG1                             &mkp MB1
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        NUM {
            bindings = <
&kp ESCAPE               &kp F3   &kp F1  &kp F2  &kp F3                                            &kp F6              &kp F7         &kp F8            &kp F9        &kp F10
&kp LG(LC(LEFT_ARROW))   &kp F12  &kp F4  &kp F5  &kp F6  &none               &none                 &kp LEFT            &kp RIGHT      &kp UP_ARROW      &kp DOWN      &kp PAGE_UP
&kp LC(LG(RIGHT_ARROW))  &kp F11  &kp F7  &kp F8  &kp F9  &kp LS(LG(N5))      &kp LS(LG(NUMBER_4))  &kp LS(LEFT_ARROW)  &kp LS(RIGHT)  &kp LS(UP_ARROW)  &kp LS(DOWN)  &kp PAGE_DOWN
&kp LC(LG(F))            &kp F10  &none   &none   &none   &none               &none                 &kp LEFT_SHIFT                                                     &mkp MB1
            >;
        };

        FUNCTION {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2   &kp NUMBER_3  &kp NUMBER_4       &kp N5                                        &kp NUMBER_6          &kp N7                 &kp N8             &kp N9           &kp N0
&kp PLUS      &kp MINUS      &kp ASTRK     &kp SLASH          &kp EQUAL            &none      &none         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DOUBLE_QUOTES  &kp MINUS        &kp SLASH
&kp AT_SIGN   &kp UNDER      &kp HASH      &kp LS(LA(LG(V)))  &mt LESS_THAN COMMA  &none      &none         &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp COLON          &kp EXCLAMATION  &kp QUESTION
&kp PERCENT   &kp AMPERSAND  &kp TILDE     &kp ESCAPE         &kp LA(LG(D))        &none      &kp LEFT_GUI  &kp LGUI                                                                         &kp LS(LG(NUMBER_4))
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                            &trans  &trans  &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans           &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans           &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans                  &trans          &trans                   &trans   &bootloader      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                                   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans       &none           &none       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &bootloader  &none           &none       &bootloader   &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans       &bt BT_PRV      &bt BT_NXT  &trans                                                  &bt BT_CLR_ALL
            >;
        };

        layer_7 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };
    };
};
